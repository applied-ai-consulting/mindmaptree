$seleColor: rgba($color: blue, $alpha: 0.15);
$strokeWidths: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10;

div#mindmap {
  font-size: 15px;
  position: relative;
  display: flex;

  div.rightClickTrigger {
    position: absolute; 
    width: 100%; 
    height: 100%
  }

  div#dummy {
    div {
      white-space:pre-wrap;
      width: max-content;
    }
  }

  svg {
    flex: auto;
    outline: none;
    background-color: rgb(238, 238, 243);

    foreignObject {
      cursor: default;
      border-radius: 3px;
      border-width: 2px;
      border-color: transparent;
      border-style: solid;

      &:focus {
        outline: none;
      }
      
      div {
        text-align: left;
        border: 1px solid transparent;
        width: max-content;
        white-space:pre-wrap;
        color: #514d4d;
        font-size: 15px;
        font-weight: 400 !important;
        font-family: 'Roboto', Helvetica, Arial, sans-serif;
        line-height: 2em;

        &:focus {
          border-color: rgb(154, 154, 154);
          outline: none;
        }
      }
    }

    g.depth_0.node > foreignObject { 
      background-color: white;
      border-radius: 5px;

      div {
        color: #514d4d;
        display: table !important;
        font-style: italic;
        z-index: 100 !important;
        background-color: #fffbfb !important;
        border-radius: 5px;
        font-size: 15px;
        font-weight: 400 !important;
        font-family: 'Roboto', Helvetica, Arial, sans-serif;
        line-height: 1.75em;
      }
    } 

    g.gButton {
      opacity: 0;
      > {
        path {
          fill: #8685FF;
        }
        rect {
          fill: white;
          stroke: grey;
          stroke-width: 0.5;
        }
      }
    }

    @each $sw in $strokeWidths {
      &.stroke-width-#{$sw} {
        path {
          stroke-width: $sw;
        }
      }
    }
    
    path {
      fill: none;
      stroke-linecap: round;
      z-index: 1;
    }

    #selectedNode:not(.depth_0) > foreignObject {
      background-color: $seleColor;
    }

    #selectedNode.depth_0 > foreignObject {
      outline: 3px solid;
      outline-color: $seleColor;
    }

    #newParentNode > foreignObject {
      border-color: $seleColor;
    }

    #editing > foreignObject > div {
      background-color: white;
    }
  }

  #menu {
    position: absolute;
    border-radius: 4px;
    box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 
      0px 8px 10px 1px rgba(0, 0, 0, 0.14),
      0px 3px 14px 2px rgba(0, 0, 0, 0.12);
    background-color: #FAFAFA;
    padding: 4px 0;

    &:focus {
      outline: none;
    }

    .menu-item {
      position: relative;
      padding: 4px 8px;
      cursor: pointer;

      &::before {
        background-color: black;
        bottom: 0;
        content: "";
        left: 0;
        opacity: 0;
        pointer-events: none;
        position: absolute;
        right: 0;
        top: 0;
        transition: 0.3s cubic-bezier(0.25, 0.8, 0.5, 1);
      }

      &:hover::before {
        opacity: 0.09;
      }
    }
  }
  
  div.button {
    position: absolute;
  
    &.right-bottom {
      bottom: 0;
      right: 0;
    }

    &.top-right {
      top: 0;
      right: 0;
      display: flex;
      flex-direction: row;
    }

    button.icon {
      position: relative;
      cursor: pointer;
      width: 36px;
      height: 36px;
      border-radius: 50%;
      background-repeat: no-repeat;
      background-color: transparent;
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 0;
      border: 0;
      color: #3f51b5;

      &::before {
        background-color: currentColor;
        border-radius: inherit;
        bottom: 0;
        color: inherit;
        content: "";
        left: 0;
        opacity: 0;
        pointer-events: none;
        position: absolute;
        right: 0;
        top: 0;
        transition: opacity 0.2s cubic-bezier(0.4, 0, 0.6, 1);
      }

      &:focus {
        outline: none;
      }

      &:hover::before {
        opacity: 0.1;
      }

      &.disabled {
        cursor: default;
        
        &:hover::before {
          opacity: 0;
        }

        i { filter: invert(85%) sepia(20%) saturate(0%) hue-rotate(125deg) brightness(86%) contrast(93%); }
      }
    }
  }
}